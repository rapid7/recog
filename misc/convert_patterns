#!/usr/bin/env ruby

require 'nokogiri'
gem 'recog', '=2.0.10'
require 'recog'

fail "Usage: #{$PROGRAM_NAME} <xml file>" unless ARGV.size == 1

file = ARGV.first

IO.readlines(file).each do |line|
  if /^(?<pre>\s+<fingerprint).*pattern=\".*flags=\"/ =~ line
    # the fingerprint element can have any of its attributes in any order,
    # so rather than trying to regex them out, parse this element as an XML snippet
    # and then spit it back out as a string after putting it in a fixed order and
    # converting the flags into the equivalent Regexp pattern
    fp = Nokogiri::XML.parse(line).children.first
    new_line = pre
    flags = Recog::Fingerprint::RegexpFactory.build_options(fp['flags'].split(/\s*,\s*/))
    new_line += " pattern=#{Regexp.new(fp['pattern'], flags).to_s.encode(xml: :attr)}"
    new_line += " certainty=\"#{fp['certainty']}\"" if fp['certainty']
    new_line += ">"
    puts new_line
    next
  end
  puts line
end
